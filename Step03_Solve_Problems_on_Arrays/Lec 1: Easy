##### QUESTION 01 :- Largest Element in an Array
          Given an array of integers nums, return the value of the largest element in the array
          
          
          Examples:
              Input: nums = [3, 3, 6, 1]
              Output: 6
              Explanation: The largest element in array is 6
              Input: nums = [3, 3, 0, 99, -40]
              Output: 99
              Explanation: The largest element in array is 99

          Constraints:
              1 <= nums.length <= 105
              -104 <= nums[i] <= 104
              nums may contain duplicate elements.
-----  SOLUTION :- 
        Method 01 :-    APPROACH : we compare and store.
                        simple and Brute force approach 
                              class Solution {
                                  public:
                                      int largestElement(vector<int>& nums) {
                                          int max = nums[0] ;
                                          int i ;
                                          for(i = 0 ; i <= nums.size() - 1 ; i++ ){
                                              if (nums[i] <= nums[i+1]){
                                                  max = nums[i+1] ;          
                                              }
                                          }
                                         return max ;
                                    }
                                };

/////  EXPLANATION :- in this solution we take a variable (max), which can store maximum number from there.
                      max is started from zeroth index 
                      then we start a for loop and start comparing each number with next one and then if next number is greater then store in max.
                      then we return max at the end.


##### QUESTION 02 :- Second Largest Element in an Array without sorting.
                        Given an array of integers nums, return the second-largest element in the array. 
                        If the second-largest element does not exist, return -1.

                        Examples:
                              Input: nums = [8, 8, 7, 6, 5]
                              Output: 7
                              Explanation: The largest value in nums is 8, the second largest is 7
                              Input: nums = [10, 10, 10, 10, 10]
                              Output: -1
                              Explanation: The only value in nums is 10, so there is no second largest value, thus -1 is returned

                          Constraints:
                              1 <= nums.length <= 105
                              -104 <= nums[i] <= 104
                              nums may contain duplicate elements.
-----  SOLUTION :- 
        Method 01 :-        







##### QUESTION 03 :- Check if the array is sorted.
                        Given an array nums, return true if the array was originally sorted in non-decreasing order,
                        then rotated some number of positions (including zero). Otherwise, return false.
                        There may be duplicates in the original array.
                        Note: An array A rotated by x positions results in an array B of the same length
                        such that B[i] == A[(i+x) % A.length] for every valid index i.

                    Example 1:
                              Input: nums = [3,4,5,1,2]
                              Output: true
                                 Explanation: [1,2,3,4,5] is the original sorted array.
                                              You can rotate the array by x = 3 positions to begin on the element of value 3: [3,4,5,1,2].
                    Example 2:
                              Input: nums = [2,1,3,4]
                              Output: false
                                 Explanation: There is no sorted array once rotated that can make nums.
                    Example 3:
                              Input: nums = [1,2,3]
                              Output: true
                                 Explanation: [1,2,3] is the original sorted array.
                                              You can rotate the array by x = 0 positions (i.e. no rotation) to make nums.
                    Constraints:
                    
                              1 <= nums.length <= 100
                              1 <= nums[i] <= 100
-----  SOLUTION :- 
        Method 01 :-        



##### QUESTION 04 :-  Remove duplicates from Sorted array
                      Given an integer array nums sorted in non-decreasing order,
                      remove the duplicates in-place such that each unique element appears only once.
                      The relative order of the elements should be kept the same. Then return the number of unique elements in nums.
                      Consider the number of unique elements of nums to be k, to get accepted, you need to do the following things:
                      Change the array nums such that the first k elements of nums contain the unique elements in the order they were present in nums initially.
                      The remaining elements of nums are not important as well as the size of nums.
                      Return k.
          Custom Judge:
                    The judge will test your solution with the following code:
                    int[] nums = [...]; // Input array
                    int[] expectedNums = [...]; // The expected answer with correct length
                    int k = removeDuplicates(nums); // Calls your implementation
                    assert k == expectedNums.length;
                    for (int i = 0; i < k; i++) {
                        assert nums[i] == expectedNums[i];
                    }
                    If all assertions pass, then your solution will be accepted.
                    
                     
                    
                    Example 1:
                              Input: nums = [1,1,2]
                              Output: 2, nums = [1,2,_]
                                 Explanation: Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.
                                              It does not matter what you leave beyond the returned k (hence they are underscores).
                    Example 2:
                              Input: nums = [0,0,1,1,1,2,2,3,3,4]
                              Output: 5, nums = [0,1,2,3,4,_,_,_,_,_]
                                 Explanation: Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.
                                              It does not matter what you leave beyond the returned k (hence they are underscores).
                               

                    Constraints:
                              1 <= nums.length <= 3 * 104
                              -100 <= nums[i] <= 100
                              nums is sorted in non-decreasing order.
